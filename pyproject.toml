[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agentic-rag-benchmarking"
version = "0.1.0"
description = "Agentic RAG Benchmarking POC with evaluation suite and Dockerized API"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "Apache-2.0" }
authors = [{ name = "Ajay Pundhir" }]
dependencies = [
  "fastapi>=0.110",
  "uvicorn>=0.30",
  "pydantic>=2.6",
  "pydantic-settings>=2.2",
  "python-json-logger>=2.0.7",
  "qdrant-client>=1.9",
  "sentence-transformers>=3.0",
  "numpy>=1.26",
  "tqdm>=4.66",
  "requests>=2.31",
  "ragas>=0.1.9",
  "langchain-google-genai>=2.0.9",
  "FlagEmbedding>=1.2.11",
]

[project.optional-dependencies]
test = [
  "pytest>=8.2",
  "pytest-asyncio>=0.23",
  "pytest-cov>=5.0",
  "httpx>=0.27",
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["app*"]
exclude = []

[tool.black]
line-length = 100
target-version = ["py311"]
skip-string-normalization = true

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "UP", # pyupgrade
  "B",  # flake8-bugbear
  "I",  # import sorting
]
ignore = [
]
fix = true

[tool.ruff.lint.isort]
known-first-party = ["app"]
profile = "black"

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
pythonpath = ["src"]


